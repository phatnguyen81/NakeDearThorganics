@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@
@section Breadcrumb
{
    @if (Model.DisplayCategoryBreadcrumb)
    {
        <div class="breadcrumb">
            <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
            @breadcrumbDelimiter
            @foreach (var cat in Model.CategoryBreadcrumb)
            {
                var isLastCategory = cat.Id == Model.Id;
                <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                if (!isLastCategory)
                {
                    @breadcrumbDelimiter
                }
            }
        </div>
        @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
    }
}
<h1 class="style-1">@Model.Name</h1>
@Html.Widget("categorydetails_top", Model.Id)
@if (!string.IsNullOrWhiteSpace(@Model.Description))
{
    <div class="category-info">
        @Html.Raw(@Model.Description)
    </div>
}
@Html.Widget("categorydetails_before_subcategories", Model.Id)

@if (Model.SubCategories.Count > 0)
{
    var i = 0;
    <div class="box subcat">
        <div class="box-heading">@T("SubCategories")</div>
        <div class="box-content">
            <div class="box-product box-subcat">
                <ul class="row">
                    <script type="text/javascript">
					if ($('.container').width() > 723) {
						(function($){$.fn.equalHeights=function(minHeight,maxHeight){tallest=(minHeight)?minHeight:0;this.each(function(){if($(this).height()>tallest){tallest=$(this).height()}});if((maxHeight)&&tallest>maxHeight)tallest=maxHeight;return this.each(function(){$(this).height(tallest)})}})(jQuery)
					$(window).load(function(){
						if($(".subcatname").length){
						$(".subcatname").equalHeights()}
					});
					};
                    </script>
                    @foreach (var item in Model.SubCategories)
                    {
                        <li class="cat-height span2 @(i % 4 == 0 ? "first-in-line" : "") @(i % 4 == 3 ? "last-in-line" : "")">
                            <div class="image">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })">
                                    <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                </a>
                            </div>
                            <div class="name subcatname">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })">@item.Name</a>
                            </div>
                        </li>
                        i++;
                    }
                </ul>
            </div>
        </div>
    </div>

}

@Html.Widget("categorydetails_before_featured_products", Model.Id)


<div class="product-filter">
    @Html.Widget("categorydetails_after_featured_products", Model.Id)
    @if (Model.Products.Count > 0)
    {
        @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
    }
    @Html.Widget("categorydetails_before_filters", Model.Id)
    <div class="product-filters">
        @*filtering*@
        @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
        {
            @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
        }
        @*filtering*@
        @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
        {
            @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
        }
    </div>
    @Html.Widget("categorydetails_before_product_list", Model.Id)
</div>

@if (Model.Products.Count > 0)
{
    var i = 0;
    <div class="product-grid">
        <ul class="row">
            @foreach (var product in Model.Products)
            {
                <li class="span3 @(i % 3 == 0 ? "first-in-line" : "") @(i % 3 == 2 ? "last-in-line" : "")">
                    @Html.Partial("_ProductBoxGridLine", product)
                </li>
                i++;
            }
        </ul>
    </div>
}
@{
    var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
}

@if (!pager.IsEmpty())
{
    <div class="pagination">
        @pager
    </div>
}

@Html.Widget("categorydetails_bottom", Model.Id)